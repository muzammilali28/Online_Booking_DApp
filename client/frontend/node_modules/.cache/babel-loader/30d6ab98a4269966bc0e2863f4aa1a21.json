{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { constants, ethers } from \"ethers\";\nimport Conabi from \"../abi/SimpleCounter.json\";\nimport Conadd from \"../abi/ContractAddress.json\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAbi = Conabi.abi;\nconst contractAddress = Conadd.address;\n\nconst ContractPage = _ref => {\n  _s();\n\n  let {\n    AccAddress,\n    AccBalance\n  } = _ref;\n  // useEffect(() => {\n  //   const storeAccounts = async () => {\n  //     const response = await fetch(\"/userWallets\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-type\": \"application/json\"\n  //       },\n  //       body: JSON.stringify({ Address: AccAddress, Balance: AccBalance })\n  //     })\n  //     const result = await response.json();\n  //     console.log(result);\n  //   }\n  //   storeAccounts();\n  // });\n  const [updateCounter, setUpdateCounter] = useState();\n  const [fetchedValue, setFetchedValue] = useState();\n  const [ContractCalled, setContractCalled] = useState();\n\n  const ContractAccess = () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const Contract = new ethers.Contract(contractAddress, contractAbi, signer);\n    return Contract;\n  };\n\n  const SetCounter = async event => {\n    event.preventDefault();\n    console.log(fetchedValue);\n    setContractCalled(false);\n    const Contract = ContractAccess();\n    await Contract.setCounter(fetchedValue);\n    console.log(\"I have waited here for the Confirmation\"); // const counterUpdate = await Contract.getCount();\n    // console.log(counterUpdate);\n    // const value = ethers.utils.arrayify(counterUpdate);\n    // console.log(value[0]);\n    // setUpdateCounter(value[0]);\n\n    setUpdateCounter(parseInt(fetchedValue));\n    setContractCalled(true);\n  }; // const Increment = async () => {\n  //   const Contract = ContractAccess();\n  //   await Contract.incrementCounter();\n  //   const counterUpdate = await Contract.getCount();\n  //   console.log(\"Contract Get Fucntion Result : \", counterUpdate);\n  //   const value = ethers.utils.arrayify(counterUpdate);\n  //   console.log(\"Value Got : \", value[0]);\n  //   setUpdateCounter(value[0]);\n  // }\n  // const Decrement = async () => {\n  //   const Contract = ContractAccess();\n  //   await Contract.decrementCounter();\n  //   const counterUpdate = await Contract.getCount();\n  //   console.log(\"Contract Get Fucntion Result : \", counterUpdate);\n  //   const value = ethers.utils.arrayify(counterUpdate);\n  //   console.log(\"Value Got : \", value[0]);\n  //   setUpdateCounter(value[0]);\n  // }\n  // return (\n  //   <div>\n  //     <form onSubmit={SetCounter}>\n  //       <label>Set Counter Value\n  //         <br />\n  //         <input\n  //           value={fetchedValue}\n  //           onChange={(e) => { setFetchedValue(e.target.value) }}\n  //           required\n  //         >\n  //         </input>\n  //       </label>\n  //       <br />\n  //       <button type=\"submit\">Set Counter</button>\n  //     </form>\n  //     <div>\n  //       <button onClick={() => { setUpdateCounter(updateCounter + 1) }}>+</button>\n  //       {/* <button onClick={Increment}>+</button> */}\n  //       {ContractCalled ? <h2>{updateCounter}</h2> : ''}\n  //       <button onClick={() => { setUpdateCounter(updateCounter - 1) }}>-</button>\n  //       {/* <button onClick={Decrement}>-</button> */}\n  //     </div>\n  //   </div>\n  // )\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(ContractPage, \"Fs3Z/XBpau2Yar25pYkHcQXUkQs=\");\n\n_c = ContractPage;\nexport default ContractPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractPage\");","map":{"version":3,"names":["constants","ethers","Conabi","Conadd","useState","useEffect","contractAbi","abi","contractAddress","address","ContractPage","AccAddress","AccBalance","updateCounter","setUpdateCounter","fetchedValue","setFetchedValue","ContractCalled","setContractCalled","ContractAccess","provider","providers","Web3Provider","window","ethereum","signer","getSigner","Contract","SetCounter","event","preventDefault","console","log","setCounter","parseInt"],"sources":["/home/muzammilali28/Desktop/Blockchain_Project/client/frontend/src/components/ContractPage.jsx"],"sourcesContent":["import { constants, ethers } from \"ethers\";\nimport Conabi from \"../abi/SimpleCounter.json\";\nimport Conadd from \"../abi/ContractAddress.json\";\nimport { useState, useEffect } from \"react\";\n\nconst contractAbi = Conabi.abi;\nconst contractAddress = Conadd.address;\n\nconst ContractPage = ({ AccAddress, AccBalance }) => {\n\n  // useEffect(() => {\n\n  //   const storeAccounts = async () => {\n  //     const response = await fetch(\"/userWallets\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-type\": \"application/json\"\n  //       },\n  //       body: JSON.stringify({ Address: AccAddress, Balance: AccBalance })\n  //     })\n  //     const result = await response.json();\n\n  //     console.log(result);\n  //   }\n\n  //   storeAccounts();\n  // });\n\n  const [updateCounter, setUpdateCounter] = useState();\n  const [fetchedValue, setFetchedValue] = useState();\n  const [ContractCalled, setContractCalled] = useState();\n\n  const ContractAccess = () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const Contract = new ethers.Contract(contractAddress, contractAbi, signer);\n\n    return Contract;\n  }\n\n  const SetCounter = async (event) => {\n\n    event.preventDefault();\n\n    console.log(fetchedValue);\n    \n    setContractCalled(false);\n\n    const Contract = ContractAccess();\n\n    await Contract.setCounter(fetchedValue);\n\n    console.log(\"I have waited here for the Confirmation\");\n    \n    // const counterUpdate = await Contract.getCount();\n\n    // console.log(counterUpdate);\n\n    // const value = ethers.utils.arrayify(counterUpdate);\n\n    // console.log(value[0]);\n\n    // setUpdateCounter(value[0]);\n\n    setUpdateCounter(parseInt(fetchedValue));\n\n    setContractCalled(true);\n  }\n\n  // const Increment = async () => {\n\n  //   const Contract = ContractAccess();\n\n  //   await Contract.incrementCounter();\n  //   const counterUpdate = await Contract.getCount();\n\n  //   console.log(\"Contract Get Fucntion Result : \", counterUpdate);\n\n  //   const value = ethers.utils.arrayify(counterUpdate);\n\n  //   console.log(\"Value Got : \", value[0]);\n\n  //   setUpdateCounter(value[0]);\n  // }\n\n  // const Decrement = async () => {\n\n  //   const Contract = ContractAccess();\n\n  //   await Contract.decrementCounter();\n  //   const counterUpdate = await Contract.getCount();\n\n  //   console.log(\"Contract Get Fucntion Result : \", counterUpdate);\n\n  //   const value = ethers.utils.arrayify(counterUpdate);\n\n  //   console.log(\"Value Got : \", value[0]);\n\n  //   setUpdateCounter(value[0]);\n  // }\n\n  // return (\n  //   <div>\n  //     <form onSubmit={SetCounter}>\n  //       <label>Set Counter Value\n  //         <br />\n  //         <input\n  //           value={fetchedValue}\n  //           onChange={(e) => { setFetchedValue(e.target.value) }}\n  //           required\n  //         >\n  //         </input>\n  //       </label>\n  //       <br />\n  //       <button type=\"submit\">Set Counter</button>\n  //     </form>\n  //     <div>\n  //       <button onClick={() => { setUpdateCounter(updateCounter + 1) }}>+</button>\n  //       {/* <button onClick={Increment}>+</button> */}\n  //       {ContractCalled ? <h2>{updateCounter}</h2> : ''}\n  //       <button onClick={() => { setUpdateCounter(updateCounter - 1) }}>-</button>\n  //       {/* <button onClick={Decrement}>-</button> */}\n  //     </div>\n  //   </div>\n  // )\n  return (\n    <>\n    </>\n  )\n}\n\nexport default ContractPage"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,QAAlC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAA3B;AACA,MAAMC,eAAe,GAAGL,MAAM,CAACM,OAA/B;;AAEA,MAAMC,YAAY,GAAG,QAAgC;EAAA;;EAAA,IAA/B;IAAEC,UAAF;IAAcC;EAAd,CAA+B;EAEnD;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EAEA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,EAAlD;EACA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,EAAhD;EACA,MAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,EAApD;;EAEA,MAAMe,cAAc,GAAG,MAAM;IAC3B,MAAMC,QAAQ,GAAG,IAAInB,MAAM,CAACoB,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;IACA,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAT,EAAf;IACA,MAAMC,QAAQ,GAAG,IAAI1B,MAAM,CAAC0B,QAAX,CAAoBnB,eAApB,EAAqCF,WAArC,EAAkDmB,MAAlD,CAAjB;IAEA,OAAOE,QAAP;EACD,CAND;;EAQA,MAAMC,UAAU,GAAG,MAAOC,KAAP,IAAiB;IAElCA,KAAK,CAACC,cAAN;IAEAC,OAAO,CAACC,GAAR,CAAYjB,YAAZ;IAEAG,iBAAiB,CAAC,KAAD,CAAjB;IAEA,MAAMS,QAAQ,GAAGR,cAAc,EAA/B;IAEA,MAAMQ,QAAQ,CAACM,UAAT,CAAoBlB,YAApB,CAAN;IAEAgB,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAZkC,CAclC;IAEA;IAEA;IAEA;IAEA;;IAEAlB,gBAAgB,CAACoB,QAAQ,CAACnB,YAAD,CAAT,CAAhB;IAEAG,iBAAiB,CAAC,IAAD,CAAjB;EACD,CA3BD,CAhCmD,CA6DnD;EAEA;EAEA;EACA;EAEA;EAEA;EAEA;EAEA;EACA;EAEA;EAEA;EAEA;EACA;EAEA;EAEA;EAEA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,oBACE,qCADF;AAID,CAzHD;;GAAMR,Y;;KAAAA,Y;AA2HN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}