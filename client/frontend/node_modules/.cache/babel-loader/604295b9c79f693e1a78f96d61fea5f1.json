{"ast":null,"code":"var _jsxFileName = \"/home/muzammilali28/Desktop/Blockchain_Project/client/frontend/src/components/MetaMaskConnection.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MetaMaskConnection = () => {\n  _s();\n\n  const [address, setAddress] = useState('');\n\n  const connectMetaMask = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    setAddress(accounts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connect your MetaMask Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => connectMetaMask(),\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your connected Address is : \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MetaMaskConnection, \"nj9PAbJHyvAwsRKdWAUpT+Dfz9w=\");\n\n_c = MetaMaskConnection;\nexport default MetaMaskConnection;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetaMaskConnection\");","map":{"version":3,"names":["useState","ethers","MetaMaskConnection","address","setAddress","connectMetaMask","provider","providers","Web3Provider","window","ethereum","accounts","send"],"sources":["/home/muzammilali28/Desktop/Blockchain_Project/client/frontend/src/components/MetaMaskConnection.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst MetaMaskConnection = () => {\n\n    const [address, setAddress] = useState('');\n\n    const connectMetaMask = async () => {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        setAddress(accounts);\n    }\n\n    return (\n        <div>\n            <h1>Connect your MetaMask Here!</h1>\n            <button onClick={() => connectMetaMask()}>Connect</button>\n            <p>Your connected Address is : {address}</p>\n        </div>\n    )\n}\n\nexport default MetaMaskConnection"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAE7B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMK,eAAe,GAAG,YAAY;IAChC,MAAMC,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;IACA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAvB;IACAR,UAAU,CAACO,QAAD,CAAV;EACH,CAJD;;EAMA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAE,MAAMN,eAAe,EAAtC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,2CAAgCF,OAAhC;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAjBD;;GAAMD,kB;;KAAAA,kB;AAmBN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}