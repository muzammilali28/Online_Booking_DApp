{"ast":null,"code":"var _jsxFileName = \"/home/muzammilali28/Desktop/Blockchain_Project/client/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Connection from \"./components/MetaMaskConnection\";\nimport ContractPage from \"./components/ContractPage\";\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    const CreatePDF = async () => {\n      const response = await fetch(\"/pdfCreator\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          Title: 'Sample Text',\n          Description: 'It is just a sample text that I need to write to the file'\n        })\n      });\n      const result = await response.json();\n      console.log(result);\n    };\n\n    CreatePDF();\n  });\n  const [connected, setConnected] = useState(false);\n  const [AccAddress, setAccAddress] = useState('');\n  const [AccBalance, setAccBalance] = useState();\n\n  const connectMetaMask = async () => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccAddress(accounts);\n      console.log(accounts);\n      const balance = await provider.getBalance(accounts[0]);\n      const balanceInEther = ethers.utils.formatEther(balance); // window.ethereum.on('accountsChanged', function (accounts){\n      //   selectedAccount = accounts[0];\n      //   console.log(`Selected account changed to ${selectedAccount}`);\n      // });\n\n      setAccBalance(balanceInEther);\n      setConnected(true);\n    } else {\n      alert(\"MetaMask Not Connected!!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: connected ? /*#__PURE__*/_jsxDEV(ContractPage, {\n      AccAddress: AccAddress,\n      AccBalance: AccBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Connection, {\n      connectMetaMask: connectMetaMask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 87\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"p+sRLbxxTYrGW1JiE9jblGvioRc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Connection","ContractPage","useEffect","useState","ethers","App","CreatePDF","response","fetch","method","headers","body","JSON","stringify","Title","Description","result","json","console","log","connected","setConnected","AccAddress","setAccAddress","AccBalance","setAccBalance","connectMetaMask","window","ethereum","provider","providers","Web3Provider","accounts","send","balance","getBalance","balanceInEther","utils","formatEther","alert"],"sources":["/home/muzammilali28/Desktop/Blockchain_Project/client/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport Connection from \"./components/MetaMaskConnection\";\nimport ContractPage from \"./components/ContractPage\";\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nfunction App() {\n\n  useEffect(() => {\n\n    const CreatePDF = async () => {\n      const response = await fetch(\"/pdfCreator\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ Title: 'Sample Text', Description: 'It is just a sample text that I need to write to the file' })\n      })\n      const result = await response.json();\n\n      console.log(result);\n    }\n\n    CreatePDF();\n  });\n  \n\n  const [connected, setConnected] = useState(false);\n  const [AccAddress, setAccAddress] = useState('');\n  const [AccBalance, setAccBalance] = useState();\n\n  const connectMetaMask = async () => {\n\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n\n      setAccAddress(accounts);\n      console.log(accounts);\n\n      const balance = await provider.getBalance(accounts[0]);\n      const balanceInEther = ethers.utils.formatEther(balance);\n\n      // window.ethereum.on('accountsChanged', function (accounts){\n\n      //   selectedAccount = accounts[0];\n  \n      //   console.log(`Selected account changed to ${selectedAccount}`);\n  \n      // });\n\n      setAccBalance(balanceInEther);\n\n      setConnected(true);\n    }\n    else {\n      alert(\"MetaMask Not Connected!!\");\n    }\n  }\n  return (\n    <div className=\"App\">\n      {connected ? <ContractPage AccAddress={AccAddress} AccBalance={AccBalance} /> : <Connection connectMetaMask={connectMetaMask} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,UAAP,MAAuB,iCAAvB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEbH,SAAS,CAAC,MAAM;IAEd,MAAMI,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;QAC1CC,MAAM,EAAE,MADkC;QAE1CC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFiC;QAK1CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAEC,KAAK,EAAE,aAAT;UAAwBC,WAAW,EAAE;QAArC,CAAf;MALoC,CAAhB,CAA5B;MAOA,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAArB;MAEAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;IACD,CAXD;;IAaAV,SAAS;EACV,CAhBQ,CAAT;EAmBA,MAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,EAA5C;;EAEA,MAAMuB,eAAe,GAAG,YAAY;IAElC,IAAIC,MAAM,CAACC,QAAX,EAAqB;MACnB,MAAMC,QAAQ,GAAG,IAAIzB,MAAM,CAAC0B,SAAP,CAAiBC,YAArB,CAAkCJ,MAAM,CAACC,QAAzC,CAAjB;MACA,MAAMI,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAvB;MAEAV,aAAa,CAACS,QAAD,CAAb;MACAd,OAAO,CAACC,GAAR,CAAYa,QAAZ;MAEA,MAAME,OAAO,GAAG,MAAML,QAAQ,CAACM,UAAT,CAAoBH,QAAQ,CAAC,CAAD,CAA5B,CAAtB;MACA,MAAMI,cAAc,GAAGhC,MAAM,CAACiC,KAAP,CAAaC,WAAb,CAAyBJ,OAAzB,CAAvB,CARmB,CAUnB;MAEA;MAEA;MAEA;;MAEAT,aAAa,CAACW,cAAD,CAAb;MAEAf,YAAY,CAAC,IAAD,CAAZ;IACD,CArBD,MAsBK;MACHkB,KAAK,CAAC,0BAAD,CAAL;IACD;EACF,CA3BD;;EA4BA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,UACGnB,SAAS,gBAAG,QAAC,YAAD;MAAc,UAAU,EAAEE,UAA1B;MAAsC,UAAU,EAAEE;IAAlD;MAAA;MAAA;MAAA;IAAA,QAAH,gBAAsE,QAAC,UAAD;MAAY,eAAe,EAAEE;IAA7B;MAAA;MAAA;MAAA;IAAA;EADlF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA1DQrB,G;;KAAAA,G;AA4DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}