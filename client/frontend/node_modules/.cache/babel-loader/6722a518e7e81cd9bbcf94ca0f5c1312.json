{"ast":null,"code":"var _jsxFileName = \"/home/muzammilali28/Desktop/Blockchain_Project/client/frontend/src/components/MetaMaskConnection.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MetaMaskConnection = () => {\n  _s();\n\n  const [connected, setConnected] = useState(false);\n\n  const connectMetaMask = async () => {\n    let provider = window.ethereum;\n\n    if (provider) {\n      //MetaMask is connected\n      console.log(\"Meta Mask is Installed\");\n      provider = new ethers.providers.Web3Provider(window.ethereum);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(accounts);\n      setConnected(true);\n    } else {\n      console.log(\"MetaMask extension NOT Found!!!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connect your MetaMask Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectMetaMask(),\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MetaMaskConnection, \"LY4Aeu5UcHHYjglHE9bCC5TH818=\");\n\n_c = MetaMaskConnection;\nexport default MetaMaskConnection;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetaMaskConnection\");","map":{"version":3,"names":["useState","ethers","MetaMaskConnection","connected","setConnected","connectMetaMask","provider","window","ethereum","console","log","providers","Web3Provider","accounts","request","method"],"sources":["/home/muzammilali28/Desktop/Blockchain_Project/client/frontend/src/components/MetaMaskConnection.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst MetaMaskConnection = () => {\n\n    const [connected, setConnected] = useState(false);\n\n    const connectMetaMask = async () => {\n        let provider = window.ethereum;\n        if (provider) {\n            //MetaMask is connected\n            console.log(\"Meta Mask is Installed\");\n            provider = new ethers.providers.Web3Provider(window.ethereum);\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts', });\n            console.log(accounts);\n            setConnected(true);\n        }\n        else {\n            console.log(\"MetaMask extension NOT Found!!!\");\n        }\n    }\n\n    return (\n        <div>\n            <h1>Connect your MetaMask Here!</h1>\n            <button onClick={connectMetaMask()}>Connect</button>\n        </div>\n    )\n}\n\nexport default MetaMaskConnection"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAE7B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMK,eAAe,GAAG,YAAY;IAChC,IAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAtB;;IACA,IAAIF,QAAJ,EAAc;MACV;MACAG,OAAO,CAACC,GAAR,CAAY,wBAAZ;MACAJ,QAAQ,GAAG,IAAIL,MAAM,CAACU,SAAP,CAAiBC,YAArB,CAAkCL,MAAM,CAACC,QAAzC,CAAX;MACA,MAAMK,QAAQ,GAAG,MAAMN,MAAM,CAACC,QAAP,CAAgBM,OAAhB,CAAwB;QAAEC,MAAM,EAAE;MAAV,CAAxB,CAAvB;MACAN,OAAO,CAACC,GAAR,CAAYG,QAAZ;MACAT,YAAY,CAAC,IAAD,CAAZ;IACH,CAPD,MAQK;MACDK,OAAO,CAACC,GAAR,CAAY,iCAAZ;IACH;EACJ,CAbD;;EAeA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEL,eAAe,EAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAzBD;;GAAMH,kB;;KAAAA,kB;AA2BN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}